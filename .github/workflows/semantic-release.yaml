name: Release
on:
  push:
    branches:
      - master
      - beta
jobs:
  release:
    name: Package and Release
    runs-on: ubuntu-latest
    permissions:
       contents: write # to be able to publish a GitHub release
       issues: write # to be able to comment on released issues
       pull-requests: write # to be able to comment on released pull requests
       id-token: write # to enable use of OIDC for npm provenance
    outputs:
      new_tag_version: ${{ steps.tag_version.outputs.new_tag_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: semantic-release-dry-run
        id: tag_version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export NEXT_TAG_VERSION=$(npx semantic-release --dry-run | grep 'The next release version is' | sed -E 's/.* ([[:digit:].]+)$/\1/')
          echo "new_tag_version=${NEXT_TAG_VERSION}" >> "$GITHUB_OUTPUT"
          echo $NEXT_TAG_VERSION      
      - name: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release
  build-docker-image:
      name: Build Docker Image
      runs-on: ubuntu-latest
      needs: release
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
           fetch-depth: 0
        - name: Set up JDK 11
          uses: actions/setup-java@v3
          with:
           java-version: '11'
           distribution: 'temurin'
           cache: maven
        - name: Print Release number
          run: |
            echo ${{ needs.release.outputs.new_tag_version }}
        - name: Build with Maven
          run: |
            pwd
            cd spring-boot-app
            pwd
            mvn -B package --file pom.xml
        - name: Docker meta
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: utsavgarg007/spring-boot-app
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Build and push
          uses: docker/build-push-action@v5
          with:
            context: spring-boot-app
            platforms: linux/amd64,linux/arm64
            push: true
            tags: utsavgarg007/spring-boot-app:${{ needs.release.outputs.new_tag_version }}
            labels: ${{ steps.meta.outputs.labels }}
